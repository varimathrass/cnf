---
AWSTemplateFormatVersion: 2010-09-09
Description: This stack creates a codepipeline for the App to be used with the ECS Cluster
Parameters:
 # EnvironmentName:
 #   Type: String
 #   Description: An environment name that will be prefixed to resource names
 #   Default: Dev
 #   AllowedValues:
 #     - Dev
 #     - Stage
 #     - Prod
 #   ConstraintDescription: Specify either Dev Prod or Stage

 # NameSpace:
 #   Description: Enter Project Name.
 #   Type: String
 #   Default: Invoicegenapp

  ClusterStackName:
    Type: String
    Description: Cluster stack name for import values
  StageServiceName:
    Type: String
    Description: Stage service cf stack name

  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'
    Type: String

  SourceRepo:
    Type: String
    Description: CodeCommit repo name

  SourceBranch:
    Type: String
    Default: master
    Description: CodeCommit repository branch - change triggers a new build

  CodeBuildDockerImage:
    Type: String
    Default: aws/codebuild/docker:18.09.0


Resources:
  CodeBuildBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-codebuild

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CodeBuildBucket
      PolicyDocument:
        Version: '2012-10-17'
        Id: SSEAndSSLPolicy
        Statement:
        - Sid: DenyInsecureConnections
          Effect: Deny
          Principal: '*'
          Action: s3:*
          Resource: !Sub arn:${AWS::Partition}:s3:::${CodeBuildBucket}/*
          Condition:
            Bool:
              aws:SecureTransport": false

  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-codepipeline


  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: 
      - InvoicegenPipeline
      - CodeBuildBucket
    Properties:
      Description: This project creates the Invoicegen docker Images and pushes them to ECR
      Name: !Sub ${AWS::StackName}-build
      Artifacts:
        Type: CODEPIPELINE
#  Encryption is only used when we have Artifact Outputs to S3
#      EncryptionKey:
#        Fn::ImportValue:
#          !Sub ${EnvironmentName}-InvoicegenKey-CMK-Arn
      BadgeEnabled: false
      Cache:
        Location: !Sub ${AWS::StackName}-codebuild/cache
        Type: S3
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: !Ref CodeBuildDockerImage
        PrivilegedMode: true
        EnvironmentVariables: 
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${SourceRepo}
      LogsConfig:
        CloudWatchLogs:
          Status:  ENABLED
          StreamName: !Sub ${AWS::StackName}-build
      ServiceRole: !Sub ${AWS::StackName}-codebuild
      Source:
        Type: CODEPIPELINE
        BuildSpec: build_spec.yml
      Tags:
        - Key: Name
          Value: Codebuild-Invoicegen
      TimeoutInMinutes: 15
      VpcConfig:
        VpcId:
          Fn::ImportValue: !Sub ${ParentVPCStack}-VPC
        Subnets: !Split [',', {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetsPrivate'}]
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${ClusterStackName}-SecurityGroup        

  InvoicegenPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: PipelineBucket
    Properties:
      Name: !Sub ${AWS::StackName}
      ArtifactStore:
#        EncryptionKey:
#          Id:
#            Fn::ImportValue:
#             !Sub ${EnvironmentName}-InvoicegenKey-CMK-Arn
#          Type: KMS
        Location: !Sub ${AWS::StackName}-codepipeline
        Type: S3
      RestartExecutionOnUpdate: false
      RoleArn:
        Fn::ImportValue:
           !Sub ${AWS::StackName}-codepipeline-Arn
# Source Stage Definition
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              InputArtifacts: []
              OutputArtifacts:
                - Name: Invoiceapp
              Configuration:
                RepositoryName: !Ref SourceRepo
                BranchName: !Ref SourceBranch
              RunOrder: 1

# Build Stage Definition
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: Invoiceapp
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Sub ${AWS::StackName}-build
              #RoleArn:
              #  Fn::ImportValue:
              #    !Sub ${AWS::StackName}-codepipeline-Arn
              RunOrder: 1
# Deploy stage
        - Name: Deploy
          Actions:
            - Name: DeployData
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName:
                  Fn::ImportValue:
                    !Sub ${ClusterStackName}-Cluster
                ServiceName: !Sub ${StageServiceName}-Service
                FileName: imagedefinitions.json
              InputArtifacts:
                - Name: BuildOutput
              #RoleArn:
              #  Fn::ImportValue:
              #    !Sub ${AWS::StackName}-codepipeline-Arn
              RunOrder: 1
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Version: 1
#                Provider: ECS
#              Configuration:
#                ClusterName:
#                  Fn::ImportValue:
#                    !Sub ${ClusterStackName}-Cluster
#                ServiceName: invoice_web
#                FileName: service_def_web.json
#              InputArtifacts:
#                - Name: BuildOutput
#              #RoleArn:
#              #  Fn::ImportValue:
#              #    !Sub ${AWS::StackName}-codepipeline-Arn
#              RunOrder: 1
#            - Name: DeployGenerator
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Version: 1
#                Provider: ECS
#              Configuration:
#                ClusterName:
#                  Fn::ImportValue:
#                    !Sub ${ClusterStackName}-Cluster
#                ServiceName: invoice_generator
#                FileName: service_def_generator.json
#              InputArtifacts:
#                - Name: BuildOutput
#              #RoleArn:
#              #  Fn::ImportValue:
#              #    !Sub ${AWS::StackName}-codepipeline-Arn
#              RunOrder: 1




Outputs:
  Codepipeline:
    Description: Name of the Codepipeline pipeline
    Value: !Ref InvoicegenPipeline