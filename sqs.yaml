AWSTemplateFormatVersion: '2010-09-09'
Description: Best Practice SQS FIFO Queue, only available in us-east-1, us-east-2,
  us-west-2, eu-west-1, ap-northeast-1, ap-southeast-2 at time of template creation.
Parameters:
  QueueName:
    Description: This stack will append fifo to the end of this name.
    Type: String
  MaximumMessageSize:
    Type: Number
    Description: The limit of how many bytes that a message can contain before Amazon
      SQS rejects it, 1024 bytes (1 KiB) to 262144 bytes (256 KiB)
    Default: '262144'
  MessageRetentionPeriod:
    Description: 'The number of seconds that Amazon SQS retains a message. You can
      specify an integer value from 60 seconds (1 minute) to 1209600 seconds (14 days). '
    Type: Number
    Default: '345600'
  ReceiveMessageWaitTimeSeconds:
    Description: >-
      Specifies the duration, in seconds, that the ReceiveMessage action call waits
      until a message is in the queue in order to include it in the response, as opposed
      to returning an empty response if a message is not yet available. 1 to 20
    Type: Number
    Default: '0'
  UsedeadletterQueue:
    Description: >-
      A dead-letter queue is a queue that other (source) queues can target for messages
      that can't be processed (consumed) successfully. You can set aside and isolate
      these messages in the dead-letter queue to determine why their processing doesn't
      succeed.
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'
    
Conditions:
  CreateDeadLetterQueue: !Equals
    - !Ref 'UsedeadletterQueue'
    - 'true'

Resources:
  SQSPolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref SQSQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Sid: AllowLaravelSQS
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::278900400641:user/laravel
            Action: SQS:*
            Resource: !Sub arn:aws:sqs:eu-west-1:${AWS::AccountId}:${QueueName}

          - 
            Sid: AllowGownoSQS
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::278900400641:user/gowno
            Action: SQS:*
            Resource: !Sub arn:aws:sqs:eu-west-1:${AWS::AccountId}:${QueueName}

  SQSQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref 'QueueName'
      MaximumMessageSize: !Ref 'MaximumMessageSize'
      MessageRetentionPeriod: !Ref 'MessageRetentionPeriod'
      ReceiveMessageWaitTimeSeconds: !Ref 'ReceiveMessageWaitTimeSeconds'
      RedrivePolicy: !If
        - CreateDeadLetterQueue
        - deadLetterTargetArn: !GetAtt 'MyDeadLetterQueue.Arn'
          maxReceiveCount: 5
        - !Ref 'AWS::NoValue'
  
  MyDeadLetterQueue:
    Condition: CreateDeadLetterQueue
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Join
        - ''
        - - !Ref 'QueueName'
          - Deadletter

Outputs:
  QueueURL:
    Description: URL of newly created SQS Queue
    Value: !Ref 'SQSQueue'
  QueueARN:
    Description: ARN of newly created SQS Queue
    Value: !GetAtt 'SQSQueue.Arn'
  QueueName:
    Description: Name newly created SQS Queue
    Value: !GetAtt 'SQSQueue.QueueName'
